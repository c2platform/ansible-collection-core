---
- set_fact:
    cacerts_dir_domain: "{{ cacerts_ca_dir }}/{{ domain }}"

- stat:
    path: "{{ cacerts_dir_domain }}/ca-{{ domain }}.key"
  register: cacerts_dir_domain_key

- block:
    - name: Create CA dir
      file:
        path: "{{ cacerts_dir_domain }}"
        state: directory
        mode: 0700
        recurse: yes

    - name: Create CA key
      community.crypto.openssl_privatekey:
        path: "{{ cacerts_dir_domain }}/ca-{{ domain }}.key"
        force: "{{ cacerts_overwrite|default(False) }}"
      register: ca_key

    - name: Create the CA CSR
      community.crypto.openssl_csr:
        path: "{{ cacerts_dir_domain }}/ca-{{ domain }}.csr"
        privatekey_path: "{{ ca_key.filename }}"
        # constraints and usage required by CA
        basic_constraints_critical: true
        basic_constraints:
          - CA:TRUE
          - pathlen:0
        key_usage:
          - digitalSignature
          - cRLSign
          - keyCertSign
        extended_key_usage:
          - clientAuth
          - serverAuth
        common_name: "{{ domain }}"
        force: "{{cacerts_overwrite|default(False)}}"
      register: ca_csr

    - name: Sign the CA CSR
      openssl_certificate:
        path: "{{ cacerts_dir_domain }}/ca-{{ domain }}.crt"
        csr_path: "{{ ca_csr.filename }}"
        privatekey_path: "{{ ca_key.filename }}"
        provider: selfsigned
        force: "{{ cacerts_overwrite|default(False) }}"
      register: ca_crt
  when: not cacerts_dir_domain_key.stat.exists

- name: Generate a CRL
  community.crypto.x509_crl:
    path: "{{ cacerts_dir_domain }}/ca-{{ domain }}.crl"
    privatekey_path: "{{ cacerts_dir_domain }}/ca-{{ domain }}.key"
    issuer:
      CN: "{{ domain }}"
    last_update: "+0s"
    next_update: "+520w"
    revoked_certificates: "{{ cacerts_revoked_certs|default([]) }}"
