---
- name: Get roles
  set_fact: cacerts_roles_node="{{ cacerts_roles_supported | intersect(ansible_role_names_cleaned) }}"

- debug:
    msg: "ansible_role_names_cleaned: {{ ansible_role_names_cleaned }}"

- name: Set additional java facts
  java_facts:
    version: "{{ java_version }}"
    versions: "{{ java_versions }}"
    alternatives: "{{ java_version_alternatives }}"
  when: '"java" in ansible_role_names_cleaned'

#- copy: # debug
#    content: "{{ {'java_versions': java_versions }|to_yaml }}"
#    dest: /vagrant/java_versions_cacerts.yml

- name: "Download for import"
  get_url:
    url: "{{ item['url'] }}"
    dest: "{{ item['url']|c2platform.core.ansible_cache_file }}"
  with_items: "{{ cacerts_import_certs_urls }}"
  register: ansible_cache_files

- name: "Import certs for roles"
  include: role.yml
  with_items: "{{ cacerts_roles_node }}"
  vars:
    role: "{{ role_item }}"
  loop_control:
    loop_var: role_item # prevent variable collision

- name: "Import certs for JDK"
  include: jdk.yml
  with_items: "{{ java_versions }}"
  when: '"java" in ansible_role_names_cleaned'
  vars:
    jdk: "{{ java_versions[jdk_version_no] }}"
  loop_control:
    loop_var: jdk_version_no

- name: "Import certs for OS"
  include: os.yml

- name: Certs with CA
  include: ca.yml
  with_items: "{{ cacerts_ca_domains }}"
  loop_control:
    loop_var: domain
  when: cacerts_ca_server == inventory_hostname
